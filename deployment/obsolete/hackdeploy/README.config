The hack-deploy script takes a configuration file, by default
hackdeploy.conf in the current directory, which has the following
syntax.

conf = { stuff }

where stuff is a dict which contains the following:
         'targetbase'          base remote directory under which files will be deployed
         'repo'                local repo with files checked out and/or edited to the state desired
         'prepdirbase'         base local directory where files will be written in prep for deployment
         'remoteprepdirbase'   base remote directory where files will be written in prep for deployment
         'services'            { entry, entry, ...}

The entries for 'services' look like this:

{ name-of-service:
    'description':  short description of service
    'files':        { entry, entry, entry ...}
    'destdir':      subdirectory under targetbase (see above) where file will be copied

The entries for 'files' look like this:

{ name-of-file:
    'path':       path under local repo where file can be found
    'mode':       permissions to set on file, e.g. '0644'



Example config file:

conf = {'targetbase': "/home/ariel/wmf/dumps/deploy/srv",
        'repo': '/home/ariel/wmf/dumps/deploy/repo/dumps',
        'prepdirbase': "/home/ariel/wmf/dumps/deploy/prepmehere",
        'remoteprepdirbase': "/home/ariel/wmf/dumps/deploy/remoteprepmehere",

        'services':
            {'addschanges':
                 {'description': 'update python scripts for adds-changes dumps',
                  'files':
                    {'generateincrementals.py':
                         {'path': 'incrementals',
                          'mode': '0644'},
                     'IncrDumpLib.py':
                         {'path': 'incrementals',
                          'mode': '0644'},
                     'WikiDump.py':
                         {'mode': '0644'}
                    },
                  'destdir': 'addschanges'
                 }
            }
       }
